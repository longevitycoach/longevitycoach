name: PR Validation

on:
  pull_request:
    branches: [main, master]
    paths:
      - 'memory-bank/**'
      - '.windsurf/rules/**'
      - '.github/workflows/**'
      - '**/*.md'
      - '!node_modules/**'

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install markdownlint
      run: |
        npm install -g markdownlint-cli
        npm install -g markdownlint-cli2
    
    - name: Run markdownlint
      run: |
        # Check all markdown files except node_modules
        find . -name "*.md" -not -path "*/node_modules/*" -print0 | xargs -0 markdownlint -c .markdownlint.json --disable MD013 --disable MD033 || \
          { echo "::error::Markdown linting failed"; exit 1; }
    
    - name: Check for unstaged changes
      run: |
        git diff --exit-code --name-only || \
          { echo "::error::Unstaged changes detected. Run 'git add .' and commit the changes."; exit 1; }
    
    - name: Validate branch name
      run: |
        BRANCH_NAME=$(echo ${{ github.head_ref }} | tr '[:upper:]' '[:lower:]')
        if [[ ! "$BRANCH_NAME" =~ ^(feature|bugfix|hotfix|release)\/[a-z0-9-]+$ ]]; then
          echo "::error::Branch name '$BRANCH_NAME' does not match required pattern: (feature|bugfix|hotfix|release)/[a-z0-9-]+"
          exit 1
        fi
    
    - name: Validate PR description
      env:
        PR_BODY: ${{ github.event.pull_request.body }}
      run: |
        if [ -z "$PR_BODY" ] || [ "$PR_BODY" == "null" ]; then
          echo "::error::PR description cannot be empty"
          exit 1
        fi
        
        if ! echo "$PR_BODY" | grep -q '## Description\|## Changes\|## Related Issues'; then
          echo "::error::PR description is missing required sections (## Description, ## Changes, ## Related Issues)"
          exit 1
        fi
        
        # Check for linked issues
        if ! echo "$PR_BODY" | grep -q 'Fixes #\|Closes #\|Resolves #'; then
          echo "::warning::Consider linking to an issue using 'Fixes #', 'Closes #', or 'Resolves #'"
        fi
